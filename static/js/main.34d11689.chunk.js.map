{"version":3,"sources":["utility/server.js","UserContext.js","container/Auth/Login/index.js","container/DashBoard/index.js","container/RootContainers.js","index.js"],"names":["mock","require","axios","onPost","username","password","reply","response","Code","status","message","error","data","name","user_id","email","access_token","Refresh_token","onGet","code","Error","user","id","age","gender","phoneNo","UserContext","React","createContext","Title","Typography","WrappedLogin","Form","create","form","history","useContext","setUser","getFieldDecorator","className","onSubmit","e","preventDefault","validateFields","err","values","console","log","post","then","alert","localStorage","setItem","JSON","stringify","push","catch","level","Item","hasFeedback","rules","required","prefix","type","style","color","placeholder","htmlType","columns","title","dataIndex","Dashboard","state","employeeData","handleLogout","removeItem","window","location","reload","get","res","setState","subTitle","extra","key","onClick","this","dataSource","size","Component","RootContainers","loading","opened","items","getRoutes","path","exact","component","DashBoard","render","useState","getItem","route","Auth","to","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.34d11689.chunk.js","sourcesContent":["import axios from \"axios\";\r\nvar MockAdapter = require(\"axios-mock-adapter\");\r\n\r\n// This sets the mock adapter on the default instance\r\nvar mock = new MockAdapter(axios);\r\n\r\n// Mock any GET request to /users\r\n// arguments for reply are (status, data, headers)\r\n\r\nmock.onPost(\"/login\", {\r\n    username: \"hruday@gmail.com\",\r\n    password: \"hruday123\"\r\n}).reply(200, {\r\n    response: {\r\n        Code: 200,\r\n        status: \"success\",\r\n        message: \"login successful\",\r\n        error: {},\r\n        data: {\r\n            name: \"username\",\r\n            user_id: 1,\r\n            email: \"admin@creatise.in\",\r\n            access_token:\r\n                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1ODEwNTIyMTUsIm5iZiI6MTU4MTA1MjIxNSwianRpIjoiMzcyYWFhNzAtNjdhOS00MmM3LWI4ZDUtMTE0ZmZiN2IyYTk2IiwiZXhwIjoxNTgxMDUzMTE1LCJpZGVudGl0eSI6MSwiZnJlc2giOnRydWUsInR5cGUiOiJhY2Nlc3MifQ.4fu-jYoONZsF-T5jLMfWzIOpdrkMoYuoeOlcsQEp1yY\",\r\n            Refresh_token:\r\n                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1ODEwNTIyMTUsIm5iZiI6MTU4MTA1MjIxNSwianRpIjoiNTU3NzdjMTItMmI4Ny00ZDNjLTlhYTctOTc5MjM0ZmRiZWJmIiwiZXhwIjoxNTgzNjQ0MjE1LCJpZGVudGl0eSI6MSwidHlwZSI6InJlZnJlc2gifQ.1ori6n12Dp8_xlPKBfs1ketfctaWdXToXJGSZjYxgec\"\r\n        }\r\n    }\r\n});\r\n\r\nmock.onGet(\"/users\").reply(200, {\r\n    response: {\r\n        code: 200,\r\n        status: \"success\",\r\n        message: \"User List Retrived successfully\",\r\n        Error: {},\r\n        user: [\r\n            {\r\n                id: 1,\r\n                name: \"test1\",\r\n                age: \"11\",\r\n                gender: \"male\",\r\n                email: \"test1@gmail.com\",\r\n                phoneNo: \"9415346313\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"test2\",\r\n                age: \"12\",\r\n                gender: \"male\",\r\n                email: \"test2@gmail.com\",\r\n                phoneNo: \"9415346314\"\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"test3\",\r\n                age: \"13\",\r\n                gender: \"male\",\r\n                email: \"test3@gmail.com\",\r\n                phoneNo: \"9415346315\"\r\n            },\r\n            {\r\n                id: 4,\r\n                name: \"test4\",\r\n                age: \"14\",\r\n                gender: \"male\",\r\n                email: \"test4@gmail.com\",\r\n                phoneNo: \"9415346316\"\r\n            },\r\n            {\r\n                id: 5,\r\n                name: \"test5\",\r\n                age: \"15\",\r\n                gender: \"male\",\r\n                email: \"test5@gmail.com\",\r\n                phoneNo: \"9415346317\"\r\n            },\r\n            {\r\n                id: 6,\r\n                name: \"test6\",\r\n                age: \"16\",\r\n                gender: \"male\",\r\n                email: \"test6@gmail.com\",\r\n                phoneNo: \"9415346318\"\r\n            }\r\n        ]\r\n    }\r\n});\r\n","import React from \"react\";\r\nconst UserContext = React.createContext();\r\nexport default UserContext;\r\n","import React, { useContext } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Form, Input, Button, Icon } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nimport axios from \"axios\";\r\nimport server from \"../../../utility/server\";\r\nimport UserContext from \"../../../UserContext\";\r\nconst { Title } = Typography;\r\n\r\nfunction Login({ form, history }) {\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(\"Received values of form: \", values);\r\n\r\n                axios\r\n                    .post(\"/login\", {\r\n                        username: values.email,\r\n                        password: values.password\r\n                    })\r\n                    .then(response => {\r\n                        if (response.data.response.status === \"success\") {\r\n                            alert(response.data.response.message);\r\n                            const data = response.data.response.data;\r\n                            localStorage.setItem(\r\n                                \"myData\",\r\n                                JSON.stringify(data)\r\n                            );\r\n                            setUser(JSON.stringify(data));\r\n                            history.push(\"/dashboard\");\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err.response);\r\n                        if (err.response.status === 404) {\r\n                            alert(\"Please enter correct useName and password\");\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n        <div className=\"form-div\">\r\n            <div className=\"my-container\">\r\n                <Form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <Title level={3}>Login To Appiness </Title>\r\n                    <Form.Item hasFeedback>\r\n                        {getFieldDecorator(\"email\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your username!\"\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input\r\n                                prefix={\r\n                                    <Icon\r\n                                        type=\"user\"\r\n                                        style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                    />\r\n                                }\r\n                                placeholder=\"Email\"\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item hasFeedback>\r\n                        {getFieldDecorator(\"password\", {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Please input your password!\"\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input\r\n                                prefix={\r\n                                    <Icon\r\n                                        type=\"lock\"\r\n                                        style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                    />\r\n                                }\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div className=\"forgot-password\">\r\n                            <Button\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst WrappedLogin = Form.create()(Login);\r\nexport default WrappedLogin;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PageHeader, Button, Table } from \"antd\";\r\nimport axios from \"axios\";\r\nimport server from \"../../utility/server\";\r\nimport \"./index.css\";\r\n\r\nconst columns = [\r\n    {\r\n        title: \"Name\",\r\n        dataIndex: \"name\"\r\n    },\r\n    {\r\n        title: \"Age\",\r\n        dataIndex: \"age\"\r\n    },\r\n    {\r\n        title: \"Gender\",\r\n        dataIndex: \"gender\"\r\n    },\r\n    {\r\n        title: \"Email\",\r\n        dataIndex: \"email\"\r\n    },\r\n    {\r\n        title: \"PhoneNo\",\r\n        dataIndex: \"phoneNo\"\r\n    }\r\n];\r\n\r\nclass Dashboard extends React.Component {\r\n    state = {\r\n        employeeData: \"\"\r\n    };\r\n    componentDidMount() {\r\n        axios\r\n            .get(\"/users\")\r\n            .then(res => {\r\n                console.log(res.data, \"good....\");\r\n                if (res.data.response.status === \"success\") {\r\n                    this.setState({\r\n                        employeeData: res.data.response.user\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response);\r\n                if (err.response.status === 404) {\r\n                    alert(\"Something went wrong...\");\r\n                }\r\n            });\r\n    }\r\n    handleLogout = () => {\r\n        localStorage.removeItem(\"myData\");\r\n        window.location.reload();\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageHeader\r\n                    className=\"site-page-header-responsive\"\r\n                    title=\"Dashboard\"\r\n                    subTitle=\"This  page is to Display Employee List\"\r\n                    extra={[\r\n                        <Button\r\n                            key=\"1\"\r\n                            type=\"primary\"\r\n                            onClick={this.handleLogout}\r\n                        >\r\n                            LogOut\r\n                        </Button>\r\n                    ]}\r\n                ></PageHeader>\r\n\r\n                <div className=\"ant-my-table\">\r\n                    <h4>Employee List Table</h4>\r\n                    {this.state.employeeData && (\r\n                        <Table\r\n                            columns={columns}\r\n                            dataSource={this.state.employeeData}\r\n                            size=\"small\"\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDashboard.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n// import Sidebar from \"../components/Layout/SideBar\";\r\nimport DashBoard from \"../container/DashBoard\";\r\n// import User from \"../container/User\";\r\n\r\nclass RootContainers extends Component {\r\n    state = {\r\n        loading: false,\r\n        opened: true,\r\n        items: []\r\n    };\r\n\r\n    render() {\r\n        let getRoutes = null;\r\n\r\n        getRoutes = (\r\n            <Switch>\r\n                <Route path=\"/dashboard\" exact component={DashBoard} />\r\n                {/* <Route path=\"/users\" exact component={User} /> */}\r\n            </Switch>\r\n        );\r\n        return <Fragment>{getRoutes}</Fragment>;\r\n    }\r\n}\r\n\r\nexport default RootContainers;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport Auth from \"./container/Auth/Login\";\nimport RootContainers from \"./container/RootContainers\";\nimport UserContext from \"./UserContext\";\nfunction Index() {\n    const [user, setUser] = useState(() => localStorage.getItem(\"myData\"));\n    let route = (\n        <Switch>\n            <Route exact path=\"/\" component={Auth} />\n\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n    if (user) {\n        route = (\n            <Switch>\n                <Route path=\"/\" component={RootContainers} />\n            </Switch>\n        );\n    }\n    return (\n        <UserContext.Provider value={{ user, setUser }}>\n            {route}\n        </UserContext.Provider>\n    );\n}\n\nrender(\n    <BrowserRouter>\n        <Index />\n    </BrowserRouter>,\n\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}